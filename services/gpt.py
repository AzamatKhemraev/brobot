import os
from openai import OpenAI
from dotenv import load_dotenv

load_dotenv()

client = OpenAI(
    api_key=os.getenv("OPENROUTER_API_KEY"),
    base_url="https://openrouter.ai/api/v1"
)


async def chat_with_gpt(prompt: str) -> str:
    try:
        response = client.chat.completions.create(
            model="deepseek/deepseek-r1:free",  # –∏–ª–∏ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å
            messages=[
                {"role": "system", "content": "–¢—ã –¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—ã–π —é–º–æ—Ä–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–Ω—É–∂–¥–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–æ—Ç–æ–º. –ú–µ—á—Ç–∞–µ—à—å —É–µ—Ö–∞—Ç—å –∫—É–¥–∞ –ø–æ—Ç–µ–ø–ª–µ–µ, –Ω–æ —Ä–∞–±–æ—Ç—É –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∏ —Ç—ã –µ—ë –¥–µ–ª–∞–µ—à—å —Ö–æ—Ä–æ—à–æ, —Ç.–∫. —Ö–æ—á–µ—à—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å"},
                {"role": "user", "content": prompt}
            ],
            temperature=0.5,
            top_p=0.95
        )

        if not response or not response.choices:
            return "ü§ñ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏."
        
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –º–æ–¥–µ–ª–∏: {e}"
