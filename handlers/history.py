from aiogram import Router, types
from aiogram.filters import Command
from services.context import get_history

router = Router()


@router.message(Command("history"))
async def history_command(message: types.Message):
    chat_id = message.chat.id
    history = get_history(chat_id)

    if not history:
        await message.reply("¬Ø\\(¬∞_o)/¬Ø –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—É—Å—Ç–∞.")
        return

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é
    formatted = []
    for i, entry in enumerate(history[-20:], 1):  # –≤—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å–æ–æ–±—â–µ–Ω–∏–π
        role = "üë§" if entry["role"] == "user" else "ü§ñ"
        content = entry["content"].strip()
        if not content:
            continue
        formatted.append(f"{i}. {role} {content}")

    response = "\n\n".join(formatted)

    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ç–µ–ª–µ–≥–∏: 4096 —Å–∏–º–≤–æ–ª–æ–≤
    if len(response) > 4000:
        response = response[:500] + "\n\n... (–æ–±—Ä–µ–∑–∞–Ω–æ)"

    print('response')

    await message.reply(response)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
def register_handlers(dp):
    dp.include_router(router)
